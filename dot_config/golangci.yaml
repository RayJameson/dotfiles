# yaml-language-server: $schema=https://golangci-lint.run/jsonschema/golangci.jsonschema.json
version: "2"
run:
  issues-exit-code: 1
  tests: true
  build-tags:
    - testing
  modules-download-mode: readonly
  allow-parallel-runners: false
  relative-path-mode: gitroot
  go: ""
linters:
  enable:
    - asasalint
    - asciicheck
    - bidichk
    - bodyclose
    - contextcheck
    - durationcheck
    - errcheck
    - errname
    - errorlint
    - forcetypeassert
    - gochecksumtype
    - goconst
    - gocritic
    - godot
    - gomoddirectives
    - gosmopolitan
    - govet
    - iface
    - importas
    - ineffassign
    - interfacebloat
    - intrange
    - loggercheck
    - misspell
    - musttag
    - nakedret
    - nestif
    - nilerr
    - nilnil
    - noctx
    - nolintlint
    - nosprintfhostport
    - prealloc
    - predeclared
    - promlinter
    - reassign
    - recvcheck
    - revive
    - rowserrcheck
    - sqlclosecheck
    - staticcheck
    - tagliatelle
    - testableexamples
    - testifylint
    - testpackage
    - thelper
    - thelper
    - tparallel
    - unparam
    - unused
    - usestdlibvars
    - wastedassign
    - whitespace
  settings:
    mnd:
      ignored-functions:
        - flag.Arg
        - flag.Duration.*
        - flag.Float.*
        - flag.Int.*
        - flag.Uint.*
        - os.Chmod
        - os.Mkdir.*
        - os.OpenFile
        - os.WriteFile
        - prometheus.ExponentialBuckets.*
        - prometheus.LinearBuckets
    revive:
      severity: warning
      rules:
        - name: atomic
        - name: context-as-argument
        - name: context-keys-type
        - name: error-naming
        - name: var-declaration
        - name: range
        - name: time-naming
        - name: indent-error-flow
        - name: errorf
        - name: superfluous-else
    nakedret:
      max-func-lines: 0
    staticcheck:
      checks:
        - all

        # SA1019 is for checking that we're not using fields marked as
        # deprecated in a comment. It decides this in a loose way so I'm
        # silencing it. Also because it's tripping on our own structs.
        - -SA1019

        # ST1003 complains about names like remoteUrl or itemId (should be
        # remoteURL and itemID). While I like these suggestions, it also
        # complains about enum constants that are all caps, and we use these and
        # I like them, and also about camelCase identifiers that contain an
        # underscore, which we also use in a few places. Since it can't be
        # configured to ignore specific cases, and I don't want to use nolint
        # comments in the code, we have to disable it altogether.
        - -ST1003 # Poorly chosen identifier

        # The following checks are all disabled by default in golangci-lint, but
        # we disable them again explicitly here to make it easier to keep this
        # list in sync with the gopls config in .vscode/settings.json.
        - -ST1000, # At least one file in a package should have a package comment
        - -ST1020, # The documentation of an exported function should start with the function's name
        - -ST1021, # The documentation of an exported type should start with type's name
        - -ST1022, # The documentation of an exported variable or constant should start with variable's name
  exclusions:
    rules:
      - linters:
          - errcheck
        source: "^\\s*defer\\s+"
formatters:
  enable:
    - gofumpt
    - goimports
  exclusions:
    paths:
      - vendor/
