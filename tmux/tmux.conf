set-option -g default-shell $SHELL
unbind C-b
set -g prefix C-a
bind-key C-a send-prefix
bind-key x kill-pane # skip "kill-pane 1? (y/n)" prompt
# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on
set -g status-bg default
set -g status-fg default
set -g status-interval 15
set -g status-right-length 40
set -g word-separators "!\"#$%&'()*+,-./:;<=>?@[\\]^`{|}~"
set -g pane-border-style fg="#6272a4"
set -g pane-active-border-style fg="#ff79c6"
set -g detach-on-destroy off  # don't exit from tmux when closing a session
set -g @t-fzf-prompt '  '
set -g @t-fzf-find-binding 'ctrl-f:change-prompt(  )+reload(fd -H -d 2 -t d . ~)'
set -g @t-bind "none"
set -g @t-bind "t"
set-window-option -g mode-keys vi
bind -n C-S-Left swap-window -d -t -1
bind -n C-S-Right swap-window -d -t +1
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",xterm-256color*:Tc,xterm-256color*:RGB"
# message text
set -g message-style bg="#2c323c",fg="#8be9fd"
set -g status-style bg="#2c323c",fg="#bd93f9"

# set -g status-interval 1
set -g status-left-length 20

# status left
# are we controlling tmux or the content of the panes?
set -g status-left "#[bg=#50fa7b]#[fg=#282a36]#{tmux_mode_indicator}"

# window status
set-window-option -g window-status-style fg="#bd93f9",bg=default
set-window-option -g window-status-current-style fg="#ff79c6",bg="#282a36"
set -g window-status-current-format "#[fg=#282a36]#[bg=#bd93f9] #I #W #{?window_zoomed_flag, ,}"
set -g window-status-format "#[fg=#f8f8f2]#[bg=#2c323c] #I #W #{?window_bell_flag,󰂞 ,}#{?window_zoomed_flag, ,}"

# status right
set -g status-right '#{pomodoro_status}'

# List of plugins
set -g @plugin "ofirgall/tmux-window-name"
set -g @plugin "MunifTanjim/tmux-mode-indicator"
set -g @plugin "olimorris/tmux-pomodoro-plus"
set -g @plugin "MunifTanjim/tmux-suspend"
set -g @plugin "jaclu/tmux-menus"
set -g @plugin "joshmedeski/t-smart-tmux-session-manager"

#Plugins settings:
set -g @menus_trigger "F9"
set -g @suspend_key "F12"
set -g @pomodoro_on "#[fg=#e06c75] "
set -g @pomodoro_complete "#[fg=#50fa7b] "
set -g @pomodoro_start "P"
set -g @pomodoro_notifications "on" 
# prompt to display when tmux prefix key is pressed
set -g @mode_indicator_prefix_prompt " ☺ "
# prompt to display when tmux is in copy mode
set -g @mode_indicator_copy_prompt " ☺ "
# prompt to display when tmux has synchronized panes
set -g @mode_indicator_sync_prompt " ☺ "
# prompt to display when tmux is in normal mode
set -g @mode_indicator_empty_prompt " ☺ "
# style values for prefix prompt
set -g @mode_indicator_prefix_mode_style "bg=blue,fg=black"
# style values for copy prompt
set -g @mode_indicator_copy_mode_style "bg=yellow,fg=black"
# style values for sync prompt
set -g @mode_indicator_sync_mode_style "bg=red,fg=black"
# style values for empty prompt
set -g @mode_indicator_empty_mode_style "bg=cyan,fg=black"
set -g @suspend_suspended_options " \
  @mode_indicator_custom_prompt::  , \
  @mode_indicator_custom_mode_style::bg=brightblack\\,fg=white, \
"

# Smart pane switching with awareness of vim and fzf
# Default snippet from vim-tmux-navigator helps with (neo)vim but my keymap for fzf <ctrl-j>/<ctrl-k> doesn't work with it
# I've found answer for my problem here from gfontenot
# https://github.com/christoomey/vim-tmux-navigator/issues/188#issuecomment-347885707

forward_programs="view|n?vim?|fzf"
should_forward="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?($forward_programs)(diff)?$'"

bind-key -n "C-h" if-shell "$should_forward" "send-keys C-h" { if -F "#{pane_at_left}" "" "select-pane -L" }
bind-key -n "C-j" if-shell "$should_forward" "send-keys C-j" { if -F "#{pane_at_bottom}" "" "select-pane -D" }
bind-key -n "C-k" if-shell "$should_forward" "send-keys C-k" { if -F "#{pane_at_top}" "" "select-pane -U" }
bind-key -n "C-l" if-shell "$should_forward" "send-keys C-l" { if -F "#{pane_at_right}" "" "select-pane -R" }

bind-key -T copy-mode-vi "C-h" if -F "#{pane_at_left}" "" "select-pane -L"
bind-key -T copy-mode-vi "C-j" if -F "#{pane_at_bottom}" "" "select-pane -D"
bind-key -T copy-mode-vi "C-k" if -F "#{pane_at_top}" "" "select-pane -U"
bind-key -T copy-mode-vi "C-l" if -F "#{pane_at_right}" "" "select-pane -R"

# Resize 

bind -n "M-h" if-shell "$should_forward" "send-keys M-h" "resize-pane -L 5"
bind -n "M-j" if-shell "$should_forward" "send-keys M-j" "resize-pane -D 5"
bind -n "M-k" if-shell "$should_forward" "send-keys M-k" "resize-pane -U 5"
bind -n "M-l" if-shell "$should_forward" "send-keys M-l" "resize-pane -R 5"

bind-key -T copy-mode-vi M-h resize-pane -L 5
bind-key -T copy-mode-vi M-j resize-pane -D 5
bind-key -T copy-mode-vi M-k resize-pane -U 5
bind-key -T copy-mode-vi M-l resize-pane -R 5

# Window bindings
bind O new-window -c "#{pane_current_path}"
bind '"' split-window -v -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind \\ split-window -v -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"

# Vim keybindings
bind-key -T prefix "v" copy-mode
bind-key -T copy-mode-vi "v" send -X begin-selection
bind-key -T copy-mode-vi "y" send -X copy-selection
bind-key m choose-window -F "#{window_index}: #{window_name}" "join-pane -h -t %%"
bind-key M choose-window -F "#{window_index}: #{window_name}" "join-pane -v -t %%"
bind -n Pageup copy-mode -u
bind -n Pagedown copy-mode -u

# Reload tmux config
bind r source-file ~/.tmux.conf

##################################################################################
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
setenv -g TMUX_PLUGIN_MANAGER_PATH "$XDG_CONFIG_HOME/tmux/plugins/"
set -g @plugin "tmux-plugins/tpm"
set -g @plugin "tmux-plugins/tmux-sensible"
run "~/.config/tmux/plugins/tpm/tpm"
